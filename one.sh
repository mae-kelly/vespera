#!/bin/bash

# Anima Emoji Replacer - Transform emojis to feminine mystical symbols
# Inspired by Jungian anima archetype

set -euo pipefail

# Colors for output
PINK='\033[95m'
WHITE='\033[97m'
PURPLE='\033[35m'
NC='\033[0m'

echo -e "${PINK}‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ ANIMA EMOJI TRANSFORMATION ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ${NC}"
echo -e "${WHITE}Replacing harsh emojis with soft feminine mystical symbols${NC}"
echo

# Create backup directory
BACKUP_DIR="backup_pre_anima_$(date +%Y%m%d_%H%M%S)"
mkdir -p "$BACKUP_DIR"
echo -e "${PURPLE}‡ºÑ Creating backup in $BACKUP_DIR${NC}"

# Define feminine mystical replacements
declare -A emoji_replacements=(
    # Status/Success symbols
    ["‚úÖ"]="‚ãÜ"
    ["‚úì"]="‚ô°"
    ["‚úîÔ∏è"]="‚úß"
    ["‚òëÔ∏è"]="‡ºÑ"
    
    # Warning/Error symbols  
    ["‚ùå"]="ìçØ"
    ["‚ö†Ô∏è"]="‡≥É‡øî"
    ["‚ùó"]="ìÇÉ"
    ["‚õî"]="‚åó"
    ["üö®"]="ìàí"
    
    # Technical symbols
    ["üîß"]="‚äπ"
    ["‚öôÔ∏è"]="ñ•î"
    ["üõ†Ô∏è"]="·®µ"
    ["üî©"]="Íëò"
    ["‚ö°"]="‚ú¶"
    ["üöÄ"]="ìè≤"
    ["üéØ"]="‚óñ"
    ["üí°"]="‚óó"
    ["üîç"]="ñ†ó"
    ["üîé"]="ÍóÉ"
    
    # Progress/Loading
    ["üìä"]="‚âõ"
    ["üìà"]="ñ°°"
    ["üìâ"]="ùÜ∫ùÖ•"
    ["üìã"]="Í©ú"
    ["üìÅ"]="ñ£†"
    ["üìÇ"]="ñ¶π"
    ["üìÑ"]="îòì"
    ["üìù"]="Íï§"
    
    # System/Computer
    ["üíª"]="‚ùë"
    ["üñ•Ô∏è"]="‚ùí"
    ["‚å®Ô∏è"]="‚¶Ç"
    ["üñ±Ô∏è"]="ìàÉ"
    ["üíæ"]="ìÑ≤"
    ["üíø"]="ìÑ¥"
    ["üìÄ"]="ìàÄ"
    ["üîå"]="ìäî"
    
    # Network/Connection
    ["üì°"]="‚Ä£"
    ["üì∂"]="‚Ä∫"
    ["üåê"]="‚å´"
    ["üîó"]="‚≠í"
    ["üîå"]="·öô"
    ["üì®"]="‚©®"
    ["üìß"]="‚ñö"
    ["üì¨"]="‡ÆÉ"
    ["üìÆ"]="‚ø¥"
    
    # Finance/Trading
    ["üí∞"]="‚øª"
    ["üí∏"]="Í≠ë"
    ["üíµ"]="·ßë "
    ["üíé"]="êê´"
    ["üìä"]="Íí∞"
    ["üìà"]="Íí±"
    ["üìâ"]=" ö"
    ["üè¶"]="…û"
    
    # Time/Clock
    ["‚è∞"]="‚å®Ô∏é"
    ["‚è±Ô∏è"]="‚ö†Ô∏é"
    ["‚è≤Ô∏è"]="‚òª"
    ["üïê"]="‚ú∞"
    ["üïë"]="‚ùè"
    ["üïí"]="‡≥É‡øî"
    ["üïì"]="ìÜâ"
    ["üïî"]="‚ó°Ãà"
    
    # Success/Achievement
    ["üèÜ"]="Íí¶Íí∑"
    ["ü•á"]="‚úé"
    ["ü•à"]="·ù∞"
    ["ü•â"]="‚úø"
    ["üéñÔ∏è"]="‚òÅÔ∏é"
    ["üèÖ"]="‚ãÜ"
    ["üëë"]="‚ãÜ‚ëÖ"
    ["üåü"]="‚ô°ÃÜÃà"
    
    # Emotions/Reactions
    ["üòä"]="ìç≤"
    ["üòÄ"]="ìç±"
    ["üòÉ"]="Í™îÃ§Ã•"
    ["üòÑ"]="Íäû"
    ["üòÅ"]="ÍïÄ"
    ["üòÜ"]="‡ºò‚ô°"
    ["üòÖ"]="‚ãÜ„ÄÇ"
    ["ü§ó"]="‚§æ"
    ["üòç"]="„Éª¬∞‚òÜ"
    ["ü•∞"]="Ãº"
    ["üòò"]="‚ó°Ãà"
    ["üòó"]="‚ëÖ"
    ["üòô"]="‚ô°Ã∑"
    ["üòö"]="„ÉªÕõ‚ô°Ã∑Ã∑Ã∑„ÉªÕõ"
    
    # Animals
    ["üê±"]="·êß‡ºöÃÆ·êß"
    ["üêà"]="=ÕüÕüÕû‚ô°"
    ["üêï"]="Œµ—ó–∑"
    ["ü¶ã"]="·ôèÃ§Ã´"
    ["üêù"]="À≥‚úß‡ºö"
    ["ü¶Ñ"]="/‚úø"
    ["ü¶¢"]="·òß"
    ["üïäÔ∏è"]="‚ô°"
    
    # Nature
    ["üå∏"]="‚ä∏"
    ["üå∫"]="‚ùõ ‚ùú"
    ["üåª"]="‚ô°‚Éï"
    ["üå∑"]="‚ó°Ãà"
    ["üåπ"]="Ãä‚óû‚ô°"
    ["üåº"]="‚Éó"
    ["üåø"]=" ¨ ¨ ¨"
    ["üå±"]="‡ºä¬∑"
    ["üå≥"]="ÍïÄ"
    ["üå≤"]=".*"
    ["üçÉ"]="‚ô°Ã©Õô"
    ["üåô"]="‚úßÀñ¬∞"
    ["‚≠ê"]="Í™îÃ§Ã•"
    ["‚ú®"]="‚ô°‚Äß+"
    ["‚òÄÔ∏è"]="Ãä"
    ["üåû"]="‚ó°Ãé"
    ["üåõ"]="‚ô°Ã∑"
    ["üåú"]="¬∑"
    ["üåù"]="ÃäÀë"
    ["üåö"]="ìÜ∏"
    
    # Hearts/Love
    ["‚ù§Ô∏è"]="Íîõ"
    ["üíñ"]="*ÔπÜ"
    ["üíï"]="=ÕüÕüÕû"
    ["üíó"]="‚ô°Ã©Õô"
    ["üíì"]="Íô≥ ‚ãÜ"
    ["üíù"]="‚∏ù‚∏ù"
    ["üíò"]="‡¥Ø"
    ["üíô"]="*‚óû"
    ["üíö"]="‚ô°„Éª"
    ["üíõ"]="Õú ñ"
    ["üíú"]="„Éª"
    ["üñ§"]="Ãä‚óû‚ô°"
    ["üíü"]="‡∑Ü"
    ["‚ô•Ô∏è"]="„Éª"
    ["‚ô°"]="Ãî"
    ["üíØ"]="·µé"
    
    # Food
    ["üç∞"]="‚åá"
    ["üéÇ"]="+"
    ["üßÅ"]="‚ó¶"
    ["üç™"]="*"
    ["üç©"]="ÃÅﬁêﬁ™`"
    ["üç≠"]="‡ºò‚ãÜ"
    ["üç¨"]="Íô≥ ÍïÄ"
    ["‚òï"]="Íí∞"
    ["üçµ"]="ñßß"
    ["ü•õ"]="¬∑Õú¬∑‚ô°"
    ["üßã"]="Íí±"
    
    # Weather
    ["‚òî"]="·É¶"
    ["üåßÔ∏è"]="‚ãÜ Íï§"
    ["‚õàÔ∏è"]="‚ô° ‚äπ"
    ["üå©Ô∏è"]="‚òÖÍí∑"
    ["‚ùÑÔ∏è"]="·µé·µé"
    ["‚òÉÔ∏è"]="+"
    ["‚õÑ"]="‚®æ"
    ["üåà"]="‚ãÜ  ö"
    ["‚òÅÔ∏è"]="…û"
    ["‚õÖ"]="‚ú¶"
    
    # Symbols
    ["‚ö°"]="‚ô•Ô∏é"
    ["üî•"]="‚àû"
    ["üí´"]="ëÅç"
    ["‚ú®"]="‡≥É‡øî"
    ["‚≠ê"]="‚ãÜ"
    ["üåü"]="‚ô°"
    ["üíé"]="‚úß"
    ["üîÆ"]="‚äπ"
    ["üé≠"]="*"
    ["üé®"]="·®µ"
    ["üé™"]="‚ó°Ãà"
    ["üé≠"]="Íîõ"
    
    # Common emojis in code files
    ["üöÄ"]="ìè≤"
    ["‚úÖ"]="‚ãÜ"
    ["‚ùå"]="ìçØ"
    ["‚ö°"]="‚ú¶"
    ["üîß"]="‚äπ"
    ["üìä"]="‚âõ"
    ["üéØ"]="‚óñ"
    ["üíª"]="‚ùë"
    ["üì°"]="‚Ä£"
    ["üèÜ"]="Íí¶Íí∑"
    ["‚ö†Ô∏è"]="‡≥É‡øî"
    ["üî¥"]="ìÇÉ"
    ["üü¢"]="‚ô°"
    ["üü°"]="‚úß"
    ["üîµ"]="‚ãÜ"
    ["üü£"]="‡ºÑ"
    ["‚ö™"]="‚ó°Ãà"
    ["‚ö´"]="ìçØ"
    ["üî∂"]="‚äπ"
    ["üî∑"]="‚ú¶"
    ["üî∏"]="ñ•î"
    ["üîπ"]="·®µ"
    
    # Numbers and special
    ["1Ô∏è‚É£"]="‡≥É‡øî"
    ["2Ô∏è‚É£"]="‚ãÜ"
    ["3Ô∏è‚É£"]="‚ô°"
    ["4Ô∏è‚É£"]="‚úß"
    ["5Ô∏è‚É£"]="‡ºÑ"
    ["6Ô∏è‚É£"]="‚ó°Ãà"
    ["7Ô∏è‚É£"]="ìçØ"
    ["8Ô∏è‚É£"]="‚äπ"
    ["9Ô∏è‚É£"]="‚ú¶"
    ["üîü"]="ñ•î"
    
    # Additional mystical symbols for variety
    ["üëÄ"]="‚óñ‚óó"
    ["üëÅÔ∏è"]="ñ†ó"
    ["üßø"]="ÍóÉ"
    ["üîç"]="‚âõ"
    ["üéµ"]="ùÜ∫ùÖ•"
    ["üé∂"]="Í©ú"
    ["üéº"]="ñ£†"
    ["üé§"]="ñ¶π"
    ["üéß"]="îòì"
    ["üìª"]="Íï§"
    ["üì¢"]="‚ùë"
    ["üì£"]="‚ùí"
    ["üîî"]="‚¶Ç"
    ["üîï"]="ìàÉ"
    ["üìØ"]="ìÑ≤"
    ["üé∫"]="ìÑ¥"
    ["üé∑"]="ìàÄ"
    ["üé∏"]="ìäî"
    ["üéπ"]="‚Ä£"
    ["ü•Å"]="‚Ä∫"
    ["üéª"]="‚å´"
    ["ü™ï"]="‚≠í"
    ["üé™"]="·öô"
    ["üé®"]="‚©®"
    ["üñåÔ∏è"]="‚ñö"
    ["üñçÔ∏è"]="‡ÆÉ"
    ["üñäÔ∏è"]="‚ø¥"
    ["‚úèÔ∏è"]="‚øª"
    ["üìê"]="Í≠ë"
    ["üìè"]="·ßë "
    ["üìå"]="êê´"
    ["üìç"]="Íí∞"
    ["üó∫Ô∏è"]="Íí±"
    ["üóæ"]=" ö"
    ["üß≠"]="…û"
)

# Function to backup file
backup_file() {
    local file="$1"
    local backup_path="$BACKUP_DIR/$(basename "$file")"
    cp "$file" "$backup_path"
    echo -e "${WHITE}‡≥É‡øî Backed up: $file${NC}"
}

# Function to replace emojis in a file
replace_emojis_in_file() {
    local file="$1"
    local temp_file=$(mktemp)
    local changes_made=false
    
    # Copy original to temp file
    cp "$file" "$temp_file"
    
    # Apply replacements
    for emoji in "${!emoji_replacements[@]}"; do
        local replacement="${emoji_replacements[$emoji]}"
        if grep -q "$emoji" "$temp_file" 2>/dev/null; then
            sed -i.bak "s|$emoji|$replacement|g" "$temp_file" 2>/dev/null || true
            changes_made=true
        fi
    done
    
    # If changes were made, backup original and replace
    if [ "$changes_made" = true ]; then
        backup_file "$file"
        mv "$temp_file" "$file"
        echo -e "${PINK}‚ô° Transformed: $file${NC}"
        return 0
    else
        rm "$temp_file"
        return 1
    fi
}

# Main transformation function
transform_repository() {
    local files_changed=0
    local total_files=0
    
    echo -e "${PURPLE}‚ãÜÔΩ°‚ÄßÀö ö Scanning repository for transformation... …ûÀö‚ÄßÔΩ°‚ãÜ${NC}"
    echo
    
    # Find all relevant files
    while IFS= read -r -d '' file; do
        ((total_files++))
        if replace_emojis_in_file "$file"; then
            ((files_changed++))
        fi
    done < <(find . -type f \( \
        -name "*.py" -o \
        -name "*.sh" -o \
        -name "*.rs" -o \
        -name "*.toml" -o \
        -name "*.md" -o \
        -name "*.txt" -o \
        -name "*.json" -o \
        -name "*.env" -o \
        -name "*.yml" -o \
        -name "*.yaml" -o \
        -name "*.js" -o \
        -name "*.ts" -o \
        -name "*.html" -o \
        -name "*.css" \
    \) \
    ! -path "./venv/*" \
    ! -path "./.git/*" \
    ! -path "./node_modules/*" \
    ! -path "./target/*" \
    ! -path "./backup_*/*" \
    ! -path "./__pycache__/*" \
    ! -name "*.pyc" \
    ! -name "*.log" \
    -print0)
    
    echo
    echo -e "${PINK}‚ó°Ãà Transformation complete ‚ó°Ãà${NC}"
    echo -e "${WHITE}Files scanned: $total_files${NC}"
    echo -e "${WHITE}Files transformed: $files_changed${NC}"
    echo -e "${WHITE}Backup location: $BACKUP_DIR${NC}"
}

# Function to show transformation preview
show_preview() {
    echo -e "${PURPLE}‡ºÑ Transformation Preview ‡ºÑ${NC}"
    echo -e "${WHITE}Some example transformations:${NC}"
    echo
    echo -e "  ‚úÖ Success        ‚Üí ‚ãÜ"
    echo -e "  ‚ùå Error          ‚Üí ìçØ"
    echo -e "  üöÄ Rocket         ‚Üí ìè≤"
    echo -e "  ‚ö° Lightning      ‚Üí ‚ú¶"
    echo -e "  üîß Tool           ‚Üí ‚äπ"
    echo -e "  üìä Chart          ‚Üí ‚âõ"
    echo -e "  üéØ Target         ‚Üí ‚óñ"
    echo -e "  üíª Computer       ‚Üí ‚ùë"
    echo -e "  üì° Satellite      ‚Üí ‚Ä£"
    echo -e "  üèÜ Trophy         ‚Üí Íí¶Íí∑"
    echo -e "  ‚ö†Ô∏è Warning        ‚Üí ‡≥É‡øî"
    echo -e "  üíñ Heart          ‚Üí *ÔπÜ"
    echo -e "  üå∏ Blossom        ‚Üí ‚ä∏"
    echo -e "  ‚ú® Sparkles       ‚Üí ‡≥É‡øî"
    echo -e "  ü¶ã Butterfly      ‚Üí Œµ—ó–∑"
    echo
}

# Function to create restoration script
create_restoration_script() {
    cat > "restore_original_emojis.sh" << 'EOF'
#!/bin/bash

# Restoration script to revert anima transformation
echo "Restoring original emojis from backup..."

BACKUP_DIR=$(ls -1dt backup_pre_anima_* 2>/dev/null | head -1)

if [ -z "$BACKUP_DIR" ]; then
    echo "‚ùå No backup directory found!"
    exit 1
fi

echo "Found backup: $BACKUP_DIR"

# Restore files
while IFS= read -r -d '' backup_file; do
    original_file=$(basename "$backup_file")
    if [ -f "$original_file" ]; then
        cp "$backup_file" "$original_file"
        echo "Restored: $original_file"
    fi
done < <(find "$BACKUP_DIR" -type f -print0)

echo "‚úÖ Restoration complete!"
EOF

    chmod +x "restore_original_emojis.sh"
    echo -e "${WHITE}‡ºÑ Created restoration script: restore_original_emojis.sh${NC}"
}

# Main execution
main() {
    echo -e "${PINK}"
    echo "   ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ"
    echo "                 ANIMA TRANSFORMATION"
    echo "             Converting harsh tech symbols"
    echo "             to soft feminine mysticism"
    echo "   ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ"
    echo -e "${NC}"
    echo
    
    show_preview
    echo
    read -p "$(echo -e "${WHITE}‚ô° Proceed with anima transformation? (y/N): ${NC}")" -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo
        transform_repository
        create_restoration_script
        echo
        echo -e "${PINK}‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ Transformation ritual complete ‚ãÜÔΩ°‚ÄßÀö ö‚ô°…ûÀö‚ÄßÔΩ°‚ãÜ${NC}"
        echo -e "${WHITE}Your repository has been blessed with feminine mystical energy${NC}"
        echo -e "${WHITE}Run ./restore_original_emojis.sh to revert if needed${NC}"
    else
        echo
        echo -e "${WHITE}‚ó°Ãà Transformation cancelled - repository unchanged${NC}"
    fi
}

# Run the main function
main "$@"